{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Abhay Kachhwaha\\\\Desktop\\\\React Projects\\\\react-chat-app\\\\src\\\\components\\\\ChatFeed.jsx\";\nimport React from \"react\";\nimport MessageForm from \"./MessageForm\";\nimport MyMessage from \"./MyMessage\";\nimport TheirMessage from \"./TheirMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatFeed = props => {\n  const {\n    chats,\n    activeChat,\n    userName,\n    messages\n  } = props;\n  const chat = chats && chats[activeChat];\n\n  const renderMessage = () => {\n    const keys = Object.keys(messages);\n\n    const renderReadRecipt = (message, isMyMessage) => {\n      chat.people.map((person, index) => {\n        var _person$person;\n\n        person.last_read === message.id && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"read-receipt\",\n          style: {\n            float: isMyMessage ? 'right' : 'left',\n            backgroundImage: `url(${person === null || person === void 0 ? void 0 : (_person$person = person.person) === null || _person$person === void 0 ? void 0 : _person$person.avatar})`\n          }\n        }, `read_${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 14\n        }, this);\n      });\n    };\n\n    return keys.map((key, index) => {\n      const message = messages[key];\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\n      const isMyMessage = userName === message.sender.username;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-block\",\n          children: isMyMessage ? /*#__PURE__*/_jsxDEV(MyMessage, {\n            message: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(TheirMessage, {\n            message: message,\n            lastMessageKey: lastMessageKey\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"read-receipts\",\n          style: {\n            marginRight: isMyMessage ? \"18px\" : \"0px\",\n            marginLeft: isMyMessage ? \"0px\" : \"68px\"\n          },\n          children: \"read-receipts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, `msg_${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  if (!chat) return \"Loading...\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-feed\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-title-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-title\",\n        children: chat.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-subtitle\",\n        children: chat.people.map(person => ` ${person.person.username}`)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), renderMessage(), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-form-container\",\n      children: /*#__PURE__*/_jsxDEV(MessageForm, { ...props,\n        chatId: activeChat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"read-read-receipts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ChatFeed;\nexport default ChatFeed;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatFeed\");","map":{"version":3,"sources":["C:/Users/Abhay Kachhwaha/Desktop/React Projects/react-chat-app/src/components/ChatFeed.jsx"],"names":["React","MessageForm","MyMessage","TheirMessage","ChatFeed","props","chats","activeChat","userName","messages","chat","renderMessage","keys","Object","renderReadRecipt","message","isMyMessage","people","map","person","index","last_read","id","float","backgroundImage","avatar","key","lastMessageKey","sender","username","width","marginRight","marginLeft","title","height"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport MessageForm from \"./MessageForm\";\r\nimport MyMessage from \"./MyMessage\";\r\nimport TheirMessage from \"./TheirMessage\";\r\n\r\nconst ChatFeed = (props) => {\r\n  const { chats, activeChat, userName, messages } = props;\r\n\r\n  const chat = chats && chats[activeChat];\r\n\r\n  const renderMessage = () => {\r\n    const keys = Object.keys(messages);\r\n\r\n    const renderReadRecipt = (message, isMyMessage) => {\r\n        chat.people.map((person, index) =>{\r\n            person.last_read === message.id && (\r\n             <div key={`read_${index}`}\r\n                className='read-receipt'\r\n                style={{\r\n                    float:isMyMessage ? 'right' : 'left', \r\n                    backgroundImage: `url(${person?.person?.avatar})` \r\n                }}\r\n             />   \r\n            );\r\n        });\r\n    };\r\n\r\n    return keys.map((key, index) => {\r\n      const message = messages[key];\r\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\r\n      const isMyMessage = userName === message.sender.username;\r\n\r\n      return (\r\n        <div key={`msg_${index}`} style={{ width: \"100%\" }}>\r\n          <div className=\"message-block\">\r\n            {isMyMessage ? \r\n            <MyMessage message={message}/> : \r\n            <TheirMessage message={message} lastMessageKey={lastMessageKey}/>}\r\n          </div>\r\n          <div\r\n            className=\"read-receipts\"\r\n            style={{\r\n              marginRight: isMyMessage ? \"18px\" : \"0px\",\r\n              marginLeft: isMyMessage ? \"0px\" : \"68px\",\r\n            }}\r\n          >\r\n            read-receipts\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  if (!chat) return \"Loading...\";\r\n\r\n  return (\r\n    <div className=\"chat-feed\">\r\n      <div className=\"chat-title-container\">\r\n        <div className=\"chat-title\">{chat.title}</div>\r\n        <div className='chat-subtitle'>\r\n            {chat.people.map(person => ` ${person.person.username}`)}\r\n        </div>\r\n      </div>\r\n      {renderMessage()}\r\n      <div style={{height: '100px'}}/>\r\n      <div className=\"message-form-container\">\r\n            <MessageForm {...props } chatId={activeChat}/>\r\n      </div>\r\n      <div className=\"read-read-receipts\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatFeed;\r\n"]},"metadata":{},"sourceType":"module"}